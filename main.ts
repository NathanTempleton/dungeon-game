namespace SpriteKind {
    export const Drainer = SpriteKind.create()
    export const Boss = SpriteKind.create()
}
sprites.onOverlap(SpriteKind.Drainer, SpriteKind.Player, function (sprite, otherSprite) {
    info.changeScoreBy(-1)
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    music.zapped.play()
    pause(200)
    projectile = sprites.createProjectileFromSprite(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . f . f . . . . . . . . . 
        . . . . . f . . . . . . . . . . 
        . . . . f . f . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, mySprite, 100, 100)
})
scene.onOverlapTile(SpriteKind.Player, sprites.builtin.crowd6, function (sprite, location) {
    game.over(false, effects.blizzard)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Boss, function (sprite, otherSprite) {
    pause(5000)
    info.changeScoreBy(120)
    otherSprite.destroy(effects.disintegrate, 2000)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Drainer, function (sprite, otherSprite) {
    otherSprite.destroy(effects.spray, 500)
})
scene.onOverlapTile(SpriteKind.Player, sprites.dungeon.chestClosed, function (sprite, location) {
    info.changeScoreBy(3)
})
sprites.onOverlap(SpriteKind.Enemy, SpriteKind.Player, function (sprite, otherSprite) {
    game.over(false, effects.clouds)
})
info.onLifeZero(function () {
    game.over(false)
})
scene.onOverlapTile(SpriteKind.Player, sprites.dungeon.chestOpen, function (sprite, location) {
    info.changeScoreBy(-3)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Enemy, function (sprite, otherSprite) {
    otherSprite.destroy(effects.fire, 500)
    info.changeScoreBy(1)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Boss, function (sprite, otherSprite) {
    game.over(false, effects.blizzard)
})
let otherSprite: Sprite = null
let myEnemy: Sprite = null
let projectile: Sprite = null
let mySprite: Sprite = null
scene.setBackgroundColor(12)
mySprite = sprites.create(img`
    ........................
    .....ffff...............
    ...fff22fff.............
    ..fff2222fff............
    .fffeeeeeefff...........
    .ffe222222eef...........
    .fe2ffffff2ef...........
    .ffffeeeeffff...........
    ffefbf44fbfeff..........
    fee41fddf14eef..........
    .ffffdddddeef...........
    fddddf444eef............
    fbbbbf2222f4e...........
    fbbbbf2222fd4...........
    .fccf45544f44...........
    ..ffffffff..............
    ....ff..ff..............
    ........................
    ........................
    ........................
    ........................
    ........................
    ........................
    ........................
    `, SpriteKind.Player)
mySprite.z = 100
tiles.setTilemap(tilemap`level3`)
controller.moveSprite(mySprite, 100, 100)
scene.cameraFollowSprite(mySprite)
for (let value of tiles.getTilesByType(sprites.dungeon.collectibleBlueCrystal)) {
    tiles.placeOnTile(mySprite, value)
}
forever(function () {
    pause(18000)
    for (let value of tiles.getTilesByType(sprites.dungeon.collectibleRedCrystal)) {
        music.sonar.play()
        myEnemy = sprites.create(img`
            . . . . 2 2 2 2 2 e . . . . . . 
            . . . 2 2 2 2 d 2 2 e . . . . . 
            . . e 2 2 2 2 2 2 2 e . . . . . 
            . . e 2 2 2 2 2 2 2 e . . . . . 
            . . e 2 2 2 2 2 e f f c c . . . 
            . . e e 2 2 e f f f f b c . . . 
            . e e e f e 2 b f f f d c . . . 
            e e 2 2 d f 2 e f f f b c . . . 
            e e 2 2 d f e c b 4 4 c . . . . 
            b 1 1 d e e c 4 1 1 4 c . . . . 
            . f f e e e e 4 4 4 4 c . . . . 
            . . f f d d e 4 4 4 b c . . . . 
            . . f f d d e c c c c d . . . . 
            . . . f f f f . . . . . . . . . 
            . . f f f e e e . . . . . . . . 
            . . f f f f e e e . . . . . . . 
            `, SpriteKind.Drainer)
        tiles.placeOnTile(myEnemy, value)
        myEnemy.follow(mySprite, 100)
    }
})
forever(function () {
    pause(12500)
    for (let value of tiles.getTilesByType(sprites.dungeon.collectibleInsignia)) {
        otherSprite = sprites.create(img`
            ........................
            ........................
            ........................
            ........................
            ..........ffff..........
            ........ff1111ff........
            .......fb111111bf.......
            .......f11111111f.......
            ......fd11111111df......
            ......fd11111111df......
            ......fddd1111dddf......
            ......fbdbfddfbdbf......
            ......fcdcf11fcdcf......
            .......fb111111bf.......
            ......fffcdb1bdffff.....
            ....fc111cbfbfc111cf....
            ....f1b1b1ffff1b1b1f....
            ....fbfbffffffbfbfbf....
            .........ffffff.........
            ...........fff..........
            ........................
            ........................
            ........................
            ........................
            `, SpriteKind.Enemy)
        tiles.placeOnTile(otherSprite, value)
        otherSprite.follow(mySprite, 40)
    }
})
